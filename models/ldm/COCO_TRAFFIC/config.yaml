model:
  base_learning_rate: 1.0e-04
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image
    #cond_stage_key: "txt"
    image_size: 32
    channels: 3
    cond_stage_trainable: false   # Note: different from the one we trained before
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False
    #ckpt_path: models/ldm/stable-diffusion-v1/last.ckpt
    #load_only_unet: True

    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [ 10000 ]
        cycle_lengths: [ 10000000000000 ] # incredibly large number to prevent corner cases
        f_start: [ 1.e-6 ]
        f_max: [ 1. ]
        f_min: [ 1. ]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32
        in_channels: 3
        out_channels: 3
        model_channels: 224
        attention_resolutions:
#          - 8
          - 4
          - 2
        num_res_blocks: 2
        channel_mult:
          - 1
          - 2
          - 3
#          - 4
        num_head_channels: 32

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 3
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 3
          resolution: 32
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
#          - 2
#          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config: __is_unconditional__

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 256
    num_workers: 10
    wrap: false
    train:
      target: ldm.data.COCO_TRAFFIC.COCO_TRAFFIC_Train
      params:
        size: 32
        attack: clean
    validation:
      target: ldm.data.COCO_TRAFFIC.COCO_TRAFFIC_Val
      params:
        size: 32
        attack: clean
